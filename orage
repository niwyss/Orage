#!/usr/bin/python
# -*- coding:utf-8 -*-
#
# Orage : weather forecast in your shell
# Copyright 2012 Nicolas Wyss
#
# This file is part of Orage.
#
# Orage is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Orage is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Orage.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import sys
import os

from modules import city
from modules import weather

# Informations on the product
product_name = "orage"
product_description = 'orage : weather forecast in your shell'
product_version = '0.1'

def parse_arguments():

    # Create the top-level parser
    parser = argparse.ArgumentParser(description=product_description, prog=product_name)
    parser.add_argument('--version', action='version', version='%(prog)s ' + product_version)
    parser.add_argument('-v', '--verbose', action='store_true', help='verbose')
    
    # Create the low-level parser
    subparser = parser.add_subparsers(title='commands', dest="command_name" )

    # Create the parser for the "city" command
    parser_city = subparser.add_parser('city', help='search city id')
    parser_city.add_argument('name', help='name of the city')
   
    # Create the parser for the "weather" command
    parser_weather = subparser.add_parser('weather', help='display weather forecast for a city')
    parser_weather.add_argument('id', action='store', help='id of the city')
     
    return parser.parse_args()

def get_product_path():

    path = "."
    if os.path.islink(sys.argv[0]):
       path = os.readlink(sys.argv[0])[:-6]
    else:
       path =  sys.argv[0][:-6]
    return os.path.abspath(path) + os.sep

# Get options from command line
args = parse_arguments()

# Get the path to command from where she's called 
path = get_product_path()                         

# Command : city
if args.command_name == 'city':

    # The default parameters
    parameters_path = path + 'parameters.json'

    # Search city
    city.search(parameters_path, args.name)
    
# Command : weather
elif args.command_name == 'weather':

    # The default parameters
    parameters_path = path + 'parameters.json'

    # Featch weather forecast for a city
    weather.search(parameters_path, args.id)

